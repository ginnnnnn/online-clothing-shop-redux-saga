{"ast":null,"code":"import _objectSpread from \"/Users/ginnnnnn/Documents/react-online-ecommerse/online-clothing-shop/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/ginnnnnn/Documents/react-online-ecommerse/online-clothing-shop/src/App.js\";\nimport React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport './App.css';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { setCurrentUser } from './redux/user/user.actions';\nimport { selectorCurrentUser } from './redux/user/user.selector';\nimport HomePage from './pages/homepage/homepage.component';\nimport ShopPage from './pages/shop/shop.component';\nimport Header from './components/header/header.component';\nimport SignInAndSignUpPage from './pages/sign-in-and-sign-up/sign-in-and-sign-up.component';\nimport { auth, createUserProfileDocument } from './firebase/firebase.utils';\nimport CheckoutPage from './pages/checkout/checkout.component';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromAuth = null;\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const setCurrentUser = this.props.setCurrentUser;\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      //firebase.auth().onAuthStateChanged subscribe auth and return unsubscribe function\n      //if signin user is an obj if signout user is null, always setState to triger rerender\n      if (userAuth) {\n        const userRef = await createUserProfileDocument(userAuth); //onSnapshot() is a realtime watching document state change method\n        //it has method data() to get data and property exist check if data exist\n\n        this.unsubscribeFromSnapshot = userRef.onSnapshot(snapshot => {\n          setCurrentUser(_objectSpread({\n            id: snapshot.id\n          }, snapshot.data()));\n        });\n      } else {\n        setCurrentUser(userAuth); //set currentUser to null\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n    this.unsubscribeFromSnapshot(); //this prevent memory leak,cus firebase.auth().onAuthStateChanged() will keep monitoring\n    //to check user auth status\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: HomePage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/shop\",\n      component: ShopPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/signin\",\n      render: () => this.props.currentUser ? React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }) : React.createElement(SignInAndSignUpPage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/checkout\",\n      component: CheckoutPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectorCurrentUser\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentUser: user => dispatch(setCurrentUser(user))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App); //without withRouter only the first route get history match location props\n//mapDispatchToProps(dispatch) return an obj as props it contains functions for set state\n//dispatch is for sending out action to reducer to update state/store,and action we set\n// is a function(user) it return {type:\"ACTION_NAME\",payload:user}","map":{"version":3,"sources":["/Users/ginnnnnn/Documents/react-online-ecommerse/online-clothing-shop/src/App.js"],"names":["React","Switch","Route","Redirect","connect","createStructuredSelector","setCurrentUser","selectorCurrentUser","HomePage","ShopPage","Header","SignInAndSignUpPage","auth","createUserProfileDocument","CheckoutPage","App","Component","unsubscribeFromAuth","unsubscribeFromSnapshot","componentDidMount","props","onAuthStateChanged","userAuth","userRef","onSnapshot","snapshot","id","data","componentWillUnmount","render","currentUser","mapStateToProps","mapDispatchToProps","dispatch","user"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport './App.css';\n\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { setCurrentUser } from './redux/user/user.actions'\nimport { selectorCurrentUser } from './redux/user/user.selector';\n\nimport HomePage from './pages/homepage/homepage.component';\nimport ShopPage from './pages/shop/shop.component';\nimport Header from './components/header/header.component';\nimport SignInAndSignUpPage from './pages/sign-in-and-sign-up/sign-in-and-sign-up.component'\n\n\n\nimport { auth, createUserProfileDocument } from './firebase/firebase.utils'\nimport CheckoutPage from './pages/checkout/checkout.component';\n\n\nclass App extends React.Component {\n\n  //set a initail unsubAuth function\n  unsubscribeFromAuth = null;\n  unsubscribeFromSnapshot = null;\n\n  componentDidMount() {\n    const { setCurrentUser } = this.props;\n\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async (userAuth) => {\n      //firebase.auth().onAuthStateChanged subscribe auth and return unsubscribe function\n      //if signin user is an obj if signout user is null, always setState to triger rerender\n      if (userAuth) {\n        const userRef = await createUserProfileDocument(userAuth);\n        //onSnapshot() is a realtime watching document state change method\n        //it has method data() to get data and property exist check if data exist\n        this.unsubscribeFromSnapshot = userRef.onSnapshot(snapshot => {\n          setCurrentUser({\n            id: snapshot.id,\n            ...snapshot.data()\n          }\n          );\n        });\n      } else {\n        setCurrentUser(userAuth)\n        //set currentUser to null\n      }\n    })\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n    this.unsubscribeFromSnapshot();\n    //this prevent memory leak,cus firebase.auth().onAuthStateChanged() will keep monitoring\n    //to check user auth status\n  }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <Switch>\n          <Route exact path='/' component={HomePage} />\n          <Route path='/shop' component={ShopPage} />\n          <Route exact path='/signin'\n            render={() =>\n              this.props.currentUser ?\n                (<Redirect to='/' />)\n                : <SignInAndSignUpPage />} />\n          <Route path='/checkout' component={CheckoutPage} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectorCurrentUser\n})\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentUser: user => dispatch(setCurrentUser(user))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\n//without withRouter only the first route get history match location props\n\n//mapDispatchToProps(dispatch) return an obj as props it contains functions for set state\n//dispatch is for sending out action to reducer to update state/store,and action we set\n// is a function(user) it return {type:\"ACTION_NAME\",payload:user}"]},"metadata":{},"sourceType":"module"}