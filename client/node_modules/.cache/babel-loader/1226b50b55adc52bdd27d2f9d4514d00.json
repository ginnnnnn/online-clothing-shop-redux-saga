{"ast":null,"code":"var _jsxFileName = \"/Users/ginnnnnn/Documents/react-online-ecommerse/online-clothing-shop/src/pages/shop/shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { connect } from 'react-redux';\nimport { updateShopCollections } from '../../redux/shop/shop.actions';\nimport CollectionOverview from '../../components/collection-overview/collection-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromShop = null;\n  }\n\n  componentDidMount() {\n    const collectionRef = firestore.collection('itemCollections');\n    this.unsubscribeFromShop = collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = await convertCollectionsSnapshotToMap(snapshot);\n      this.props.updateShopCollections(collectionsMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromShop();\n  }\n\n  render() {\n    const loading = this.state.loading;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(this.props.match.path),\n      render: props => React.createElement(CollectionOverviewWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"\".concat(this.props.match.path, \"/:collectionId\"),\n      render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateShopCollections: collections => dispatch(updateShopCollections(collections))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/ginnnnnn/Documents/react-online-ecommerse/online-clothing-shop/src/pages/shop/shop.component.jsx"],"names":["React","Route","firestore","convertCollectionsSnapshotToMap","connect","updateShopCollections","CollectionOverview","CollectionPage","WithSpinner","CollectionOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","state","loading","unsubscribeFromShop","componentDidMount","collectionRef","collection","onSnapshot","snapshot","collectionsMap","props","setState","componentWillUnmount","render","match","path","mapDispatchToProps","dispatch","collections"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,qBAAT,QAAsC,+BAAtC;AAEA,OAAOC,kBAAP,MAA+B,oEAA/B;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,MAAMC,6BAA6B,GAAGD,WAAW,CAACF,kBAAD,CAAjD;AACA,MAAMI,yBAAyB,GAAGF,WAAW,CAACD,cAAD,CAA7C;;AAGA,MAAMI,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACnCC,KADmC,GAC3B;AACJC,MAAAA,OAAO,EAAE;AADL,KAD2B;AAAA,SAKnCC,mBALmC,GAKb,IALa;AAAA;;AAOnCC,EAAAA,iBAAiB,GAAG;AAChB,UAAMC,aAAa,GAAGf,SAAS,CAACgB,UAAV,CAAqB,iBAArB,CAAtB;AACA,SAAKH,mBAAL,GAA2BE,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AAClE,YAAMC,cAAc,GAAG,MAAMlB,+BAA+B,CAACiB,QAAD,CAA5D;AACA,WAAKE,KAAL,CAAWjB,qBAAX,CAAiCgB,cAAjC;AACA,WAAKE,QAAL,CAAc;AAAET,QAAAA,OAAO,EAAE;AAAX,OAAd;AACH,KAJ0B,CAA3B;AAKH;;AAEDU,EAAAA,oBAAoB,GAAG;AACnB,SAAKT,mBAAL;AACH;;AACDU,EAAAA,MAAM,GAAG;AAAA,UAEGX,OAFH,GAEe,KAAKD,KAFpB,CAEGC,OAFH;AAGL,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,YAAK,KAAKQ,KAAL,CAAWI,KAAX,CAAiBC,IAAtB,CAAjB;AACI,MAAA,MAAM,EAAGL,KAAD,IAAW,oBAAC,6BAAD;AAA+B,QAAA,SAAS,EAAER;AAA1C,SAAuDQ,KAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAGI,oBAAC,KAAD;AAAO,MAAA,IAAI,YAAK,KAAKA,KAAL,CAAWI,KAAX,CAAiBC,IAAtB,mBAAX;AACI,MAAA,MAAM,EAAGL,KAAD,IAAW,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAER;AAAtC,SAAmDQ,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADJ;AAQH;;AA9BkC;;AAkCvC,MAAMM,kBAAkB,GAAGC,QAAQ,KAAK;AACpCxB,EAAAA,qBAAqB,EAAGyB,WAAD,IAAiBD,QAAQ,CAACxB,qBAAqB,CAACyB,WAAD,CAAtB;AADZ,CAAL,CAAnC;;AAIA,eAAe1B,OAAO,CAAC,IAAD,EAAOwB,kBAAP,CAAP,CAAkCjB,QAAlC,CAAf","sourcesContent":["import React from 'react';\nimport { Route } from 'react-router-dom';\n\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\n\nimport { connect } from 'react-redux';\nimport { updateShopCollections } from '../../redux/shop/shop.actions';\n\nimport CollectionOverview from '../../components/collection-overview/collection-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\n\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\n\nclass ShopPage extends React.Component {\n    state = {\n        loading: true\n    }\n\n    unsubscribeFromShop = null;\n\n    componentDidMount() {\n        const collectionRef = firestore.collection('itemCollections')\n        this.unsubscribeFromShop = collectionRef.onSnapshot(async snapshot => {\n            const collectionsMap = await convertCollectionsSnapshotToMap(snapshot);\n            this.props.updateShopCollections(collectionsMap);\n            this.setState({ loading: false })\n        })\n    }\n\n    componentWillUnmount() {\n        this.unsubscribeFromShop()\n    }\n    render() {\n\n        const { loading } = this.state;\n        return (\n            <div className='shop-page'>\n                <Route exact path={`${this.props.match.path}`}\n                    render={(props) => <CollectionOverviewWithSpinner isLoading={loading} {...props} />} />\n                <Route path={`${this.props.match.path}/:collectionId`}\n                    render={(props) => <CollectionPageWithSpinner isLoading={loading} {...props} />} />\n            </div>\n        );\n    }\n}\n\n\nconst mapDispatchToProps = dispatch => ({\n    updateShopCollections: (collections) => dispatch(updateShopCollections(collections))\n})\n\nexport default connect(null, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}