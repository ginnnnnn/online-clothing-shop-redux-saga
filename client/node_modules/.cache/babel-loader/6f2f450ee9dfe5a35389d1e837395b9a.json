{"ast":null,"code":"var _jsxFileName = \"/Users/ginnnnnn/Documents/react-online-ecommerse/online-clothing-shop redux-saga applied/src/pages/collection/collection.component.jsx\";\nimport React, { useEffect } from 'react';\nimport { CollectionPageContainer, TitleContainer, ItemsContainer } from './collection.styles';\nimport { firestore } from '../../firebase/firebase.utils';\nimport { connect } from 'react-redux';\nimport { selectShopCollectionsCollection } from '../../redux/shop/shop.selectors';\nimport CollectionItem from '../../components/collection-item/collection-item.component';\n\nconst CollectionPage = ({\n  collection\n}) => {\n  useEffect(() => {\n    const unsubscribe = firestore.collection('itemCollections').onSnapshot(snapshot => {\n      console.log(snapshot);\n    });\n  });\n  const items = collection.items,\n        title = collection.title;\n  return React.createElement(CollectionPageContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(TitleContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, title), React.createElement(ItemsContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, items.map(item => React.createElement(CollectionItem, {\n    className: \"collection-item\",\n    key: item.id,\n    item: item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }))));\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  collection: selectShopCollectionsCollection(ownProps.match.params.collectionId)(state)\n});\n\nexport default connect(mapStateToProps)(CollectionPage);","map":{"version":3,"sources":["/Users/ginnnnnn/Documents/react-online-ecommerse/online-clothing-shop redux-saga applied/src/pages/collection/collection.component.jsx"],"names":["React","useEffect","CollectionPageContainer","TitleContainer","ItemsContainer","firestore","connect","selectShopCollectionsCollection","CollectionItem","CollectionPage","collection","unsubscribe","onSnapshot","snapshot","console","log","items","title","map","item","id","mapStateToProps","state","ownProps","match","params","collectionId"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,uBAAT,EAAkCC,cAAlC,EAAkDC,cAAlD,QAAwE,qBAAxE;AACA,SAASC,SAAT,QAA0B,+BAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,+BAAT,QAAgD,iCAAhD;AAEA,OAAOC,cAAP,MAA2B,4DAA3B;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AACvCT,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMU,WAAW,GAAGN,SAAS,CAACK,UAAV,CAAqB,iBAArB,EAAwCE,UAAxC,CAAmDC,QAAQ,IAAI;AAAEC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AAAuB,KAAxF,CAApB;AACH,GAFQ,CAAT;AADuC,QAK/BG,KAL+B,GAKdN,UALc,CAK/BM,KAL+B;AAAA,QAKxBC,KALwB,GAKdP,UALc,CAKxBO,KALwB;AAMvC,SACI,oBAAC,uBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiBA,KAAjB,CADJ,EAEI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,KAAK,CAACE,GAAN,CAAUC,IAAI,IAAI,oBAAC,cAAD;AAAgB,IAAA,SAAS,EAAC,iBAA1B;AAA4C,IAAA,GAAG,EAAEA,IAAI,CAACC,EAAtD;AAA0D,IAAA,IAAI,EAAED,IAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAlB,CADL,CAFJ,CADJ;AAQH,CAdD;;AAgBA,MAAME,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,MAAsB;AAC1Cb,EAAAA,UAAU,EAAEH,+BAA+B,CAACgB,QAAQ,CAACC,KAAT,CAAeC,MAAf,CAAsBC,YAAvB,CAA/B,CAAoEJ,KAApE;AAD8B,CAAtB,CAAxB;;AAIA,eAAehB,OAAO,CAACe,eAAD,CAAP,CAAyBZ,cAAzB,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { CollectionPageContainer, TitleContainer, ItemsContainer } from './collection.styles';\nimport { firestore } from '../../firebase/firebase.utils';\nimport { connect } from 'react-redux';\nimport { selectShopCollectionsCollection } from '../../redux/shop/shop.selectors';\n\nimport CollectionItem from '../../components/collection-item/collection-item.component';\n\nconst CollectionPage = ({ collection }) => {\n    useEffect(() => {\n        const unsubscribe = firestore.collection('itemCollections').onSnapshot(snapshot => { console.log(snapshot) })\n    })\n\n    const { items, title } = collection\n    return (\n        <CollectionPageContainer>\n            <TitleContainer>{title}</TitleContainer>\n            <ItemsContainer>\n                {items.map(item => <CollectionItem className=\"collection-item\" key={item.id} item={item} />)}\n            </ItemsContainer>\n        </CollectionPageContainer>\n    );\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    collection: selectShopCollectionsCollection(ownProps.match.params.collectionId)(state),\n})\n\nexport default connect(mapStateToProps)(CollectionPage);"]},"metadata":{},"sourceType":"module"}