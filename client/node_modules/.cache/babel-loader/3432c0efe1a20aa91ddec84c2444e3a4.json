{"ast":null,"code":"var _jsxFileName = \"/Users/ginnnnnn/Documents/react-online-ecommerse/online-clothing-shop redux-saga applied/src/components/sign-in/sign-in.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { SignInContainer, TitleContainer, FormSubmitButtonContainer } from './sign-in.styles';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { signInWithGoogle, auth } from '../../firebase/firebase.utils';\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const emailSignInStart = this.props.emailSignInStart;\n      const _this$state = this.state,\n            email = _this$state.email,\n            password = _this$state.password;\n      emailSignInStart(email, password);\n    };\n\n    this.handleChange = e => {\n      const _e$target = e.target,\n            name = _e$target.name,\n            value = _e$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: \"\",\n      password: \"\"\n    };\n  }\n\n  render() {\n    return React.createElement(SignInContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(TitleContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"I already have an account\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Sign in with your email and password\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      label: \"email\",\n      handleChange: this.handleChange,\n      type: \"email\",\n      name: \"email\",\n      value: this.state.email,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      label: \"password\",\n      handleChange: this.handleChange,\n      type: \"password\",\n      name: \"password\",\n      value: this.state.password,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(FormSubmitButtonContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(CustomButton, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Sign In\"), React.createElement(CustomButton, {\n      type: \"button\",\n      onClick: this.props.googleSignInStart,\n      isGoogleSignIn: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Sign In with Google\"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/Users/ginnnnnn/Documents/react-online-ecommerse/online-clothing-shop redux-saga applied/src/components/sign-in/sign-in.component.jsx"],"names":["React","connect","SignInContainer","TitleContainer","FormSubmitButtonContainer","googleSignInStart","emailSignInStart","FormInput","CustomButton","signInWithGoogle","auth","SignIn","Component","constructor","props","handleSubmit","e","preventDefault","state","email","password","handleChange","target","name","value","setState","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\nimport {\n    SignInContainer,\n    TitleContainer,\n    FormSubmitButtonContainer\n} from './sign-in.styles';\n\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\n\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { signInWithGoogle, auth } from '../../firebase/firebase.utils';\n\n\n\nclass SignIn extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: \"\",\n            password: \"\"\n        }\n    }\n\n    handleSubmit = async (e) => {\n        e.preventDefault();\n        const { emailSignInStart } = this.props\n        const { email, password } = this.state\n        emailSignInStart(email, password)\n    }\n\n    handleChange = (e) => {\n        const { name, value } = e.target;\n        this.setState({ [name]: value })\n    }\n    render() {\n        return (\n            <SignInContainer>\n                <TitleContainer>I already have an account</TitleContainer>\n                <span >Sign in with your email and password</span>\n\n                <form onSubmit={this.handleSubmit}>\n                    <FormInput\n                        label='email'\n                        handleChange={this.handleChange}\n                        type=\"email\"\n                        name='email'\n                        value={this.state.email}\n                        required />\n\n                    <FormInput\n                        label='password'\n                        handleChange={this.handleChange}\n                        type=\"password\"\n                        name='password'\n                        value={this.state.password}\n                        required />\n                    <FormSubmitButtonContainer>\n                        <CustomButton type=\"submit\">Sign In</CustomButton>\n                        <CustomButton type=\"button\" onClick={this.props.googleSignInStart} isGoogleSignIn >\n                            Sign In with Google\n                        </CustomButton>\n                    </FormSubmitButtonContainer>\n                </form>\n            </SignInContainer >\n        );\n    }\n}\n\n\nconst mapDispatchToProps = dispatch => ({\n    googleSignInStart: () => dispatch(googleSignInStart()),\n    emailSignInStart: (email, password) => dispatch(emailSignInStart({ email, password }))\n})\n\nexport default connect(null, mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}