{"ast":null,"code":"import _objectSpread from \"/Users/ginnnnnn/Documents/react-online-ecommerse/online-clothing-shop/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/ginnnnnn/Documents/react-online-ecommerse/online-clothing-shop/src/App.js\";\nimport React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport HomePage from './pages/homepage/homepage.component';\nimport ShopPage from './pages/shop/shop.component';\nimport Header from './components/header/header.component';\nimport SignInAndSignUp from './pages/sign-in-and-sign-up/sign-in-and-sign-up.component';\nimport { auth, createUserProfileDocument } from './firebase/firebase.utils';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.unsubscribeFromAuth = null;\n    this.state = {\n      currentUser: null\n    };\n  } //set a initail unsubAuth function\n\n\n  componentDidMount() {\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      //firebase.auth().onAuthStateChanged subscribe auth and return unsubscribe function\n      //if signin user is an obj if signout user is null, always setState to triger rerender\n      if (userAuth) {\n        const userRef = await createUserProfileDocument(userAuth); //onSnapshot() is a realtime watching document state change method\n        //it has method data() to get data and property exist check if data exist\n\n        userRef.onSnapshot(snapshot => {\n          this.setState({\n            currentUser: _objectSpread({\n              id: snapshot.id\n            }, snapshot.data())\n          });\n        });\n        console.log(this.state);\n      } else {\n        this.setState({\n          currentUser: userAuth\n        });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth(); //this prevent memory leak,cus firebase.auth().onAuthStateChanged() will keep monitoring\n    //to check user auth status\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Header, {\n      currentUser: this.state.currentUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: HomePage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/shop\",\n      component: ShopPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/signin\",\n      component: SignInAndSignUp,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App; //without withRouter only the first route get history match location props","map":{"version":3,"sources":["/Users/ginnnnnn/Documents/react-online-ecommerse/online-clothing-shop/src/App.js"],"names":["React","Switch","Route","HomePage","ShopPage","Header","SignInAndSignUp","auth","createUserProfileDocument","App","Component","constructor","unsubscribeFromAuth","state","currentUser","componentDidMount","onAuthStateChanged","userAuth","userRef","onSnapshot","snapshot","setState","id","data","console","log","componentWillUnmount","render"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,kBAA9B;AACA,OAAO,WAAP;AAEA,OAAOC,QAAP,MAAqB,qCAArB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,MAAP,MAAmB,sCAAnB;AACA,OAAOC,eAAP,MAA4B,2DAA5B;AAEA,SAASC,IAAT,EAAeC,yBAAf,QAAgD,2BAAhD;;AAGA,MAAMC,GAAN,SAAkBT,KAAK,CAACU,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,GAAG;AACZ;AADY,SASdC,mBATc,GASQ,IATR;AAGZ,SAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE;AADF,KAAb;AAGD,GAP+B,CAShC;;;AAGAC,EAAAA,iBAAiB,GAAG;AAClB,SAAKH,mBAAL,GAA2BL,IAAI,CAACS,kBAAL,CAAwB,MAAOC,QAAP,IAAoB;AACrE;AACA;AACA,UAAIA,QAAJ,EAAc;AACZ,cAAMC,OAAO,GAAG,MAAMV,yBAAyB,CAACS,QAAD,CAA/C,CADY,CAEZ;AACA;;AACAC,QAAAA,OAAO,CAACC,UAAR,CAAmBC,QAAQ,IAAI;AAC7B,eAAKC,QAAL,CAAc;AACZP,YAAAA,WAAW;AACTQ,cAAAA,EAAE,EAAEF,QAAQ,CAACE;AADJ,eAENF,QAAQ,CAACG,IAAT,EAFM;AADC,WAAd;AAMD,SAPD;AAQAC,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKZ,KAAjB;AACD,OAbD,MAaO;AACL,aAAKQ,QAAL,CAAc;AAAEP,UAAAA,WAAW,EAAEG;AAAf,SAAd;AACD;AACF,KAnB0B,CAA3B;AAoBD;;AAEDS,EAAAA,oBAAoB,GAAG;AACrB,SAAKd,mBAAL,GADqB,CAErB;AACA;AACD;;AAGDe,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,WAAW,EAAE,KAAKd,KAAL,CAAWC,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,SAAS,EAAEX,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,SAAS,EAAEC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,SAAZ;AAAsB,MAAA,SAAS,EAAEE,eAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CAFF,CADF;AAUD;;AArD+B;;AAwDlC,eAAeG,GAAf,C,CAEA","sourcesContent":["import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport './App.css';\n\nimport HomePage from './pages/homepage/homepage.component';\nimport ShopPage from './pages/shop/shop.component';\nimport Header from './components/header/header.component';\nimport SignInAndSignUp from './pages/sign-in-and-sign-up/sign-in-and-sign-up.component'\n\nimport { auth, createUserProfileDocument } from './firebase/firebase.utils'\n\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      currentUser: null\n    }\n  }\n\n  //set a initail unsubAuth function\n  unsubscribeFromAuth = null;\n\n  componentDidMount() {\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async (userAuth) => {\n      //firebase.auth().onAuthStateChanged subscribe auth and return unsubscribe function\n      //if signin user is an obj if signout user is null, always setState to triger rerender\n      if (userAuth) {\n        const userRef = await createUserProfileDocument(userAuth);\n        //onSnapshot() is a realtime watching document state change method\n        //it has method data() to get data and property exist check if data exist\n        userRef.onSnapshot(snapshot => {\n          this.setState({\n            currentUser: {\n              id: snapshot.id,\n              ...snapshot.data()\n            }\n          });\n        });\n        console.log(this.state);\n      } else {\n        this.setState({ currentUser: userAuth })\n      }\n    })\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n    //this prevent memory leak,cus firebase.auth().onAuthStateChanged() will keep monitoring\n    //to check user auth status\n  }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header currentUser={this.state.currentUser} />\n        <Switch>\n          <Route exact path='/' component={HomePage} />\n          <Route path='/shop' component={ShopPage} />\n          <Route path='/signin' component={SignInAndSignUp} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n//without withRouter only the first route get history match location props"]},"metadata":{},"sourceType":"module"}