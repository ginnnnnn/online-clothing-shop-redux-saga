{"ast":null,"code":"var _jsxFileName = \"/Users/ginnnnnn/Documents/react-online-ecommerse/online-clothing-shop/src/pages/shop/shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { fetchCollentionsAsync } from '../../redux/shop/shop.actions';\nimport { createStructuredSelector } from 'reselect';\nimport { selectIsCollectionsLoaded } from '../../redux/shop/shop.selectors';\nimport CollectionOverviewContainer from '../../components/collection-overview/collection-overview.container';\nimport CollectionPageContainer from '../collection/collection.container';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    this.props.fetchCollentionsAsync(); // const collectionRef = firestore.collection('itemCollections')\n    // this.unsubscribeFromShop = collectionRef.onSnapshot(async snapshot => {\n    //     const collectionsMap = await convertCollectionsSnapshotToMap(snapshot);\n    //     this.props.updateShopCollections(collectionsMap);\n    //     this.setState({ loading: false })\n    // })\n  } // componentWillUnmount() {\n  //     this.unsubscribeFromShop()\n  // }\n\n\n  render() {\n    const _this$props = this.props,\n          match = _this$props.match,\n          isCollectionsLoaded = _this$props.isCollectionsLoaded;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.path),\n      component: CollectionOverviewContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"\".concat(match.path, \"/:collectionId\"),\n      component: CollectionPageContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionsLoaded: selectIsCollectionsLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollentionsAsync: () => dispatch(fetchCollentionsAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage); //render={(props) => <CollectionOverviewWithSpinner isLoading={loading} {...props} />}\n//props in route is for passing route props like history ,match  and location","map":{"version":3,"sources":["/Users/ginnnnnn/Documents/react-online-ecommerse/online-clothing-shop/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","fetchCollentionsAsync","createStructuredSelector","selectIsCollectionsLoaded","CollectionOverviewContainer","CollectionPageContainer","WithSpinner","CollectionPageWithSpinner","CollectionPage","ShopPage","Component","componentDidMount","props","render","match","isCollectionsLoaded","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AAGA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,qBAAT,QAAsC,+BAAtC;AAEA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,yBAAT,QAA0C,iCAA1C;AAEA,OAAOC,2BAAP,MAAwC,oEAAxC;AACA,OAAOC,uBAAP,MAAoC,oCAApC;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,MAAMC,yBAAyB,GAAGD,WAAW,CAACE,cAAD,CAA7C;;AAGA,MAAMC,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AAGnCC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWX,qBAAX,GADgB,CAEhB;AACA;AACA;AACA;AACA;AACA;AACH,GAXkC,CAanC;AACA;AACA;;;AACAY,EAAAA,MAAM,GAAG;AAAA,wBAEkC,KAAKD,KAFvC;AAAA,UAEGE,KAFH,eAEGA,KAFH;AAAA,UAEUC,mBAFV,eAEUA,mBAFV;AAGL,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,YAAKD,KAAK,CAACE,IAAX,CAAjB;AAAoC,MAAA,SAAS,EAAEZ,2BAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,YAAKU,KAAK,CAACE,IAAX,mBAAX;AAA4C,MAAA,SAAS,EAAEX,uBAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH;;AAzBkC;;AA4BvC,MAAMY,eAAe,GAAGf,wBAAwB,CAAC;AAC7Ca,EAAAA,mBAAmB,EAAEZ;AADwB,CAAD,CAAhD;;AAGA,MAAMe,kBAAkB,GAAGC,QAAQ,KAAK;AACpClB,EAAAA,qBAAqB,EAAE,MAAMkB,QAAQ,CAAClB,qBAAqB,EAAtB;AADD,CAAL,CAAnC;;AAIA,eAAeD,OAAO,CAACiB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CT,QAA7C,CAAf,C,CAEA;AACA","sourcesContent":["import React from 'react';\nimport { Route } from 'react-router-dom';\n\n\nimport { connect } from 'react-redux';\nimport { fetchCollentionsAsync } from '../../redux/shop/shop.actions';\n\nimport { createStructuredSelector } from 'reselect';\nimport { selectIsCollectionsLoaded } from '../../redux/shop/shop.selectors';\n\nimport CollectionOverviewContainer from '../../components/collection-overview/collection-overview.container';\nimport CollectionPageContainer from '../collection/collection.container';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\n\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\n\nclass ShopPage extends React.Component {\n\n\n    componentDidMount() {\n        this.props.fetchCollentionsAsync()\n        // const collectionRef = firestore.collection('itemCollections')\n        // this.unsubscribeFromShop = collectionRef.onSnapshot(async snapshot => {\n        //     const collectionsMap = await convertCollectionsSnapshotToMap(snapshot);\n        //     this.props.updateShopCollections(collectionsMap);\n        //     this.setState({ loading: false })\n        // })\n    }\n\n    // componentWillUnmount() {\n    //     this.unsubscribeFromShop()\n    // }\n    render() {\n\n        const { match, isCollectionsLoaded } = this.props;\n        return (\n            <div className='shop-page'>\n                <Route exact path={`${match.path}`} component={CollectionOverviewContainer} />\n                <Route path={`${match.path}/:collectionId`} component={CollectionPageContainer} />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = createStructuredSelector({\n    isCollectionsLoaded: selectIsCollectionsLoaded\n})\nconst mapDispatchToProps = dispatch => ({\n    fetchCollentionsAsync: () => dispatch(fetchCollentionsAsync())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);\n\n//render={(props) => <CollectionOverviewWithSpinner isLoading={loading} {...props} />}\n//props in route is for passing route props like history ,match  and location"]},"metadata":{},"sourceType":"module"}