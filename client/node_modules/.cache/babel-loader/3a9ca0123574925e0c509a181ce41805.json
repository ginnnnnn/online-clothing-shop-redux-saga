{"ast":null,"code":"import _objectSpread from \"/Users/ginnnnnn/Documents/react-online-ecommerse/online-clothing-shop redux-saga applied/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { all, takeLatest, call, put } from 'redux-saga/effects';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nimport UserActionTypes from './user.types';\nimport { SignInSuccess, SignInFailure, signOutSuccess, signOutFailure, signUpSuccess, signUpFailure } from './user.actions';\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n    const userSnapshot = yield userRef.get();\n    yield put(SignInSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\n;\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref2 = yield auth.signInWithEmailAndPassword(email, password),\n          user = _ref2.user;\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\n;\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\n;\nexport function* signUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const _ref3 = yield auth.createUserWithEmailAndPassword(email, password),\n          user = _ref3.user;\n\n    yield put(signUpSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\nexport function* signInAfterSignUp({\n  payload: {\n    user,\n    additionalData\n  }\n}) {\n  try {\n    yield getSnapshotFromUserAuth(user, additionalData);\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\nexport function* onGoogleSigninStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n;\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n; //signInWithEmail will get props equal emailSignInStart action\n\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\n;\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\n;\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\n;\nexport function* onSignUpSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSigninStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart), call(onSignUpStart), call(onSignUpSuccess)]);\n}","map":{"version":3,"sources":["/Users/ginnnnnn/Documents/react-online-ecommerse/online-clothing-shop redux-saga applied/client/src/redux/user/user.sagas.js"],"names":["all","takeLatest","call","put","auth","googleProvider","createUserProfileDocument","getCurrentUser","UserActionTypes","SignInSuccess","SignInFailure","signOutSuccess","signOutFailure","signUpSuccess","signUpFailure","getSnapshotFromUserAuth","userAuth","additionalData","userRef","userSnapshot","get","id","data","error","signInWithGoogle","signInWithPopup","user","signInWithEmail","payload","email","password","signInWithEmailAndPassword","isUserAuthenticated","signOut","signUp","displayName","createUserWithEmailAndPassword","signInAfterSignUp","onGoogleSigninStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","onSignUpStart","SIGN_UP_START","onSignUpSuccess","SIGN_UP_SUCCESS","userSagas"],"mappings":"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","sourcesContent":["import { all, takeLatest, call, put } from 'redux-saga/effects'\n\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\n\nimport UserActionTypes from './user.types';\n\nimport {\n    SignInSuccess,\n    SignInFailure,\n    signOutSuccess,\n    signOutFailure,\n    signUpSuccess,\n    signUpFailure\n} from './user.actions';\n\n\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\n    try {\n        const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n        const userSnapshot = yield userRef.get();\n        yield put(SignInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }))\n    } catch (error) {\n        yield put(SignInFailure(error))\n    }\n}\n\nexport function* signInWithGoogle() {\n    try {\n        const { user } = yield auth.signInWithPopup(googleProvider);\n        yield getSnapshotFromUserAuth(user);\n    } catch (error) {\n        yield put(SignInFailure(error))\n    }\n};\n\nexport function* signInWithEmail({ payload: { email, password } }) {\n    try {\n        const { user } = yield auth.signInWithEmailAndPassword(email, password);\n        yield getSnapshotFromUserAuth(user)\n    } catch (error) {\n        yield put(SignInFailure(error))\n    }\n};\n\nexport function* isUserAuthenticated() {\n    try {\n        const userAuth = yield getCurrentUser();\n        if (!userAuth) return;\n        yield getSnapshotFromUserAuth(userAuth)\n\n    } catch (error) {\n        yield put(SignInFailure(error))\n    }\n\n}\n\nexport function* signOut() {\n    try {\n        yield auth.signOut();\n        yield put(signOutSuccess())\n    } catch (error) {\n        yield put(signOutFailure(error))\n    }\n};\n\nexport function* signUp({ payload: { email, password, displayName } }) {\n    try {\n        const { user } = yield auth.createUserWithEmailAndPassword(email, password)\n        yield put(signUpSuccess({ user, additionalData: { displayName } }))\n    } catch (error) {\n        yield put(signUpFailure(error))\n    }\n}\n\nexport function* signInAfterSignUp({ payload: { user, additionalData } }) {\n    try {\n        yield getSnapshotFromUserAuth(user, additionalData);\n    } catch (error) {\n        yield put(signUpFailure(error))\n    }\n}\n\nexport function* onGoogleSigninStart() {\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\n};\n\nexport function* onEmailSignInStart() {\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail)\n};\n//signInWithEmail will get props equal emailSignInStart action\n\nexport function* onCheckUserSession() {\n    yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated)\n};\n\nexport function* onSignOutStart() {\n    yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut)\n};\n\nexport function* onSignUpStart() {\n    yield takeLatest(UserActionTypes.SIGN_UP_START, signUp)\n};\n\nexport function* onSignUpSuccess() {\n    yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp)\n}\n\nexport function* userSagas() {\n    yield all([call(onGoogleSigninStart),\n    call(onEmailSignInStart),\n    call(onCheckUserSession),\n    call(onSignOutStart),\n    call(onSignUpStart),\n    call(onSignUpSuccess)\n    ])\n}"]},"metadata":{},"sourceType":"module"}