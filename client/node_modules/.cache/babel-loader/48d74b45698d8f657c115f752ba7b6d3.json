{"ast":null,"code":"var _jsxFileName = \"/Users/ginnnnnn/Documents/react-online-ecommerse/online-clothing-shop redux-saga applied/src/App.js\";\nimport React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom'; // import { auth, createUserProfileDocument } from './firebase/firebase.utils'\n\nimport './App.css';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { checkUserSession } from './redux/user/user.actions';\nimport { selectCurrentUser } from './redux/user/user.selectors';\nimport HomePage from './pages/homepage/homepage.component';\nimport ShopPage from './pages/shop/shop.component';\nimport Header from './components/header/header.component';\nimport SignInAndSignUpPage from './pages/sign-in-and-sign-up/sign-in-and-sign-up.component';\nimport CheckoutPage from './pages/checkout/checkout.component';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromAuth = null;\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const checkUserSession = this.props.checkUserSession;\n    checkUserSession();\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n    this.unsubscribeFromSnapshot(); //this prevent memory leak,cus firebase.auth().onAuthStateChanged() will keep monitoring\n    //to check user auth status\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: HomePage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/shop\",\n      component: ShopPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/checkout\",\n      component: CheckoutPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/signin\",\n      render: () => this.props.currentUser ? React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }) : React.createElement(SignInAndSignUpPage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser\n});\n\nconst mapDispatchToProps = dispatch => ({\n  checkUserSession: () => dispatch(checkUserSession())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App); //without withRouter only the first route get history match location props\n//mapDispatchToProps(dispatch) return an obj as props it contains functions for set state\n//dispatch is for sending out action to reducer to update state/store,and action we set\n// is a function(user) it return {type:\"ACTION_NAME\",payload:user}","map":{"version":3,"sources":["/Users/ginnnnnn/Documents/react-online-ecommerse/online-clothing-shop redux-saga applied/src/App.js"],"names":["React","Switch","Route","Redirect","connect","createStructuredSelector","checkUserSession","selectCurrentUser","HomePage","ShopPage","Header","SignInAndSignUpPage","CheckoutPage","App","Component","unsubscribeFromAuth","unsubscribeFromSnapshot","componentDidMount","props","componentWillUnmount","render","currentUser","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,QAAxB,QAAwC,kBAAxC,C,CACA;;AACA,OAAO,WAAP;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,gBAAT,QAAiC,2BAAjC;AACA,SAASC,iBAAT,QAAkC,6BAAlC;AAEA,OAAOC,QAAP,MAAqB,qCAArB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,MAAP,MAAmB,sCAAnB;AACA,OAAOC,mBAAP,MAAgC,2DAAhC;AACA,OAAOC,YAAP,MAAyB,qCAAzB;;AAMA,MAAMC,GAAN,SAAkBb,KAAK,CAACc,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAGhCC,mBAHgC,GAGV,IAHU;AAAA,SAIhCC,uBAJgC,GAIN,IAJM;AAAA;;AAMhCC,EAAAA,iBAAiB,GAAG;AAAA,UACVX,gBADU,GACW,KAAKY,KADhB,CACVZ,gBADU;AAElBA,IAAAA,gBAAgB;AACjB;;AAEDa,EAAAA,oBAAoB,GAAG;AACrB,SAAKJ,mBAAL;AACA,SAAKC,uBAAL,GAFqB,CAGrB;AACA;AACD;;AAGDI,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,SAAS,EAAEZ,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,SAAS,EAAEC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,WAAlB;AAA8B,MAAA,SAAS,EAAEG,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,SAAlB;AACE,MAAA,MAAM,EAAE,MACN,KAAKM,KAAL,CAAWG,WAAX,GACG,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADH,GAEI,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CAFF,CADF;AAeD;;AAnC+B;;AAuClC,MAAMC,eAAe,GAAGjB,wBAAwB,CAAC;AAC/CgB,EAAAA,WAAW,EAAEd;AADkC,CAAD,CAAhD;;AAIA,MAAMgB,kBAAkB,GAAGC,QAAQ,KAAK;AACtClB,EAAAA,gBAAgB,EAAE,MAAMkB,QAAQ,CAAClB,gBAAgB,EAAjB;AADM,CAAL,CAAnC;;AAIA,eAAeF,OAAO,CAACkB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CV,GAA7C,CAAf,C,CAEA;AAEA;AACA;AACA","sourcesContent":["import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n// import { auth, createUserProfileDocument } from './firebase/firebase.utils'\nimport './App.css';\n\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { checkUserSession } from './redux/user/user.actions'\nimport { selectCurrentUser } from './redux/user/user.selectors';\n\nimport HomePage from './pages/homepage/homepage.component';\nimport ShopPage from './pages/shop/shop.component';\nimport Header from './components/header/header.component';\nimport SignInAndSignUpPage from './pages/sign-in-and-sign-up/sign-in-and-sign-up.component'\nimport CheckoutPage from './pages/checkout/checkout.component';\n\n\n\n\n\nclass App extends React.Component {\n\n  //set a initail unsubAuth function\n  unsubscribeFromAuth = null;\n  unsubscribeFromSnapshot = null;\n\n  componentDidMount() {\n    const { checkUserSession } = this.props\n    checkUserSession();\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n    this.unsubscribeFromSnapshot();\n    //this prevent memory leak,cus firebase.auth().onAuthStateChanged() will keep monitoring\n    //to check user auth status\n  }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <Switch>\n          <Route exact path='/' component={HomePage} />\n          <Route path='/shop' component={ShopPage} />\n          <Route exact path='/checkout' component={CheckoutPage} />\n          <Route exact path='/signin'\n            render={() =>\n              this.props.currentUser ?\n                (<Redirect to='/' />)\n                : <SignInAndSignUpPage />} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser\n})\n\nconst mapDispatchToProps = dispatch => ({\n  checkUserSession: () => dispatch(checkUserSession())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\n//without withRouter only the first route get history match location props\n\n//mapDispatchToProps(dispatch) return an obj as props it contains functions for set state\n//dispatch is for sending out action to reducer to update state/store,and action we set\n// is a function(user) it return {type:\"ACTION_NAME\",payload:user}"]},"metadata":{},"sourceType":"module"}