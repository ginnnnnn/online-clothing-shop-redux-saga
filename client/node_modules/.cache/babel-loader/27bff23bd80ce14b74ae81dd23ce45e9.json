{"ast":null,"code":"import _objectSpread from \"/Users/ginnnnnn/Documents/react-online-ecommerse/online-clothing-shop/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport firebase from 'firebase/app'; //import firebase core as firebase\n\nimport 'firebase/auth';\nimport 'firebase/firestore'; //import auth and firestore\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAJVstxl4cbCJANj3rFP39IdQ_ZRmtxfiU\",\n  authDomain: \"shopshop-cool.firebaseapp.com\",\n  databaseURL: \"https://shopshop-cool.firebaseio.com\",\n  projectId: \"shopshop-cool\",\n  storageBucket: \"\",\n  messagingSenderId: \"885544228667\",\n  appId: \"1:885544228667:web:0668defa1df1747d\"\n}; //project config\n// Initialize Firebase\n\nfirebase.initializeApp(firebaseConfig); // create an async function which catch the auth data of user and create an user document\n//to firestore\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(\"users/\".concat(userAuth.uid)); //userRef is just a location we try to reach,it doesnt vertify it's exist or not\n\n  const snapshot = await userRef.get(); //let snapshot ;firestore.doc('users/12edejiefmei').get().then(user=> snapshot=user);\n  //snapshot is an actual user data we just retrived from firestore.\n  //if a new user just signin snapshot should be null\n\n  if (!snapshot.exists) {\n    //!snapshot.exist if user not exist in firestore create one\n    const displayName = userAuth.displayName,\n          email = userAuth.email; //displayName only exists if user sign in as google\n\n    const createAt = new Date();\n\n    try {\n      await userRef.set(_objectSpread({\n        displayName,\n        email,\n        createAt\n      }, additionalData)); //add doc to user collection with id =uid and doc , addtionalData ={displName}\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\nexport const addCollectionAndDocuments = async (collectionKey, docObjectToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  console.log(collectionRef); // try {\n  //     await collectionRef.set(docObjectToAdd)\n  // } catch (error) {\n  //     console.log('error create collection', error.message)\n  // }\n};\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore(); //auth for email and password authentication \n//firestore for firebase database\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/Users/ginnnnnn/Documents/react-online-ecommerse/online-clothing-shop/src/firebase/firebase.utils.js"],"names":["firebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","initializeApp","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapshot","get","exists","displayName","email","createAt","Date","set","error","console","log","message","addCollectionAndDocuments","collectionKey","docObjectToAdd","collectionRef","collection","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,cAArB,C,CACA;;AACA,OAAO,eAAP;AACA,OAAO,oBAAP,C,CACA;;AAGA,MAAMC,cAAc,GAAG;AACnBC,EAAAA,MAAM,EAAE,yCADW;AAEnBC,EAAAA,UAAU,EAAE,+BAFO;AAGnBC,EAAAA,WAAW,EAAE,sCAHM;AAInBC,EAAAA,SAAS,EAAE,eAJQ;AAKnBC,EAAAA,aAAa,EAAE,EALI;AAMnBC,EAAAA,iBAAiB,EAAE,cANA;AAOnBC,EAAAA,KAAK,EAAE;AAPY,CAAvB,C,CAUA;AACA;;AACAR,QAAQ,CAACS,aAAT,CAAuBR,cAAvB,E,CAKA;AACA;;AACA,OAAO,MAAMS,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AACzE,MAAI,CAACD,QAAL,EAAe;AACf,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,iBAAuBJ,QAAQ,CAACK,GAAhC,EAAhB,CAFyE,CAGzE;;AAEA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB,CALyE,CAMzE;AACA;AACA;;AAEA,MAAI,CAACD,QAAQ,CAACE,MAAd,EAAsB;AAClB;AADkB,UAEVC,WAFU,GAEaT,QAFb,CAEVS,WAFU;AAAA,UAEGC,KAFH,GAEaV,QAFb,CAEGU,KAFH,EAGlB;;AACA,UAAMC,QAAQ,GAAG,IAAIC,IAAJ,EAAjB;;AACA,QAAI;AACA,YAAMV,OAAO,CAACW,GAAR;AAEEJ,QAAAA,WAFF;AAGEC,QAAAA,KAHF;AAIEC,QAAAA;AAJF,SAKKV,cALL,EAAN,CADA,CASA;AACH,KAVD,CAUE,OAAOa,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAK,CAACG,OAAzC;AACH;AACJ;;AACD,SAAOf,OAAP;AACH,CA9BM;AAgCP,OAAO,MAAMgB,yBAAyB,GAAG,OAAOC,aAAP,EAAsBC,cAAtB,KAAyC;AAC9E,QAAMC,aAAa,GAAGlB,SAAS,CAACmB,UAAV,CAAqBH,aAArB,CAAtB;AACAJ,EAAAA,OAAO,CAACC,GAAR,CAAYK,aAAZ,EAF8E,CAG9E;AACA;AACA;AACA;AACA;AACH,CARM;AAUP,OAAO,MAAME,IAAI,GAAGlC,QAAQ,CAACkC,IAAT,EAAb;AACP,OAAO,MAAMpB,SAAS,GAAGd,QAAQ,CAACc,SAAT,EAAlB,C,CACP;AACA;;AACA,MAAMqB,QAAQ,GAAG,IAAInC,QAAQ,CAACkC,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAenC,QAAf","sourcesContent":["import firebase from 'firebase/app';\n//import firebase core as firebase\nimport 'firebase/auth';\nimport 'firebase/firestore';\n//import auth and firestore\n\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAJVstxl4cbCJANj3rFP39IdQ_ZRmtxfiU\",\n    authDomain: \"shopshop-cool.firebaseapp.com\",\n    databaseURL: \"https://shopshop-cool.firebaseio.com\",\n    projectId: \"shopshop-cool\",\n    storageBucket: \"\",\n    messagingSenderId: \"885544228667\",\n    appId: \"1:885544228667:web:0668defa1df1747d\"\n};\n\n//project config\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\n\n\n\n// create an async function which catch the auth data of user and create an user document\n//to firestore\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n    if (!userAuth) return;\n    const userRef = firestore.doc(`users/${userAuth.uid}`);\n    //userRef is just a location we try to reach,it doesnt vertify it's exist or not\n\n    const snapshot = await userRef.get();\n    //let snapshot ;firestore.doc('users/12edejiefmei').get().then(user=> snapshot=user);\n    //snapshot is an actual user data we just retrived from firestore.\n    //if a new user just signin snapshot should be null\n\n    if (!snapshot.exists) {\n        //!snapshot.exist if user not exist in firestore create one\n        const { displayName, email } = userAuth;\n        //displayName only exists if user sign in as google\n        const createAt = new Date();\n        try {\n            await userRef.set(\n                {\n                    displayName,\n                    email,\n                    createAt,\n                    ...additionalData\n                }\n            )\n            //add doc to user collection with id =uid and doc , addtionalData ={displName}\n        } catch (error) {\n            console.log('error creating user', error.message);\n        }\n    }\n    return userRef;\n};\n\nexport const addCollectionAndDocuments = async (collectionKey, docObjectToAdd) => {\n    const collectionRef = firestore.collection(collectionKey);\n    console.log(collectionRef)\n    // try {\n    //     await collectionRef.set(docObjectToAdd)\n    // } catch (error) {\n    //     console.log('error create collection', error.message)\n    // }\n}\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n//auth for email and password authentication \n//firestore for firebase database\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ prompt: 'select_account' });\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\nexport default firebase;"]},"metadata":{},"sourceType":"module"}