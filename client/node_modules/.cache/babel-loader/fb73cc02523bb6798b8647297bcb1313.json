{"ast":null,"code":"import _objectSpread from \"/Users/ginnnnnn/Documents/react-online-ecommerse/online-clothing-shop redux-saga applied/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { all, takeLatest, call, put } from 'redux-saga/effects';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport UserActionTypes from './user.types';\nimport { googleSignInSuccess, googleSignInFailure, emailSignInSuccess, emailSignInFailure } from './user.actions';\nexport function* signInWithGoogle() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(googleSignInSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (error) {\n    yield put(googleSignInFailure(error));\n  }\n}\n;\nexport function* signInWithEmail(props) {\n  yield console.log(props);\n}\nexport function* onGoogleSigninStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSigninStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["/Users/ginnnnnn/Documents/react-online-ecommerse/online-clothing-shop redux-saga applied/src/redux/user/user.sagas.js"],"names":["all","takeLatest","call","put","auth","googleProvider","createUserProfileDocument","UserActionTypes","googleSignInSuccess","googleSignInFailure","emailSignInSuccess","emailSignInFailure","signInWithGoogle","signInWithPopup","user","userRef","userSnapshot","get","id","data","error","signInWithEmail","props","console","log","onGoogleSigninStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":";AAAA,SAASA,GAAT,EAAcC,UAAd,EAA0BC,IAA1B,EAAgCC,GAAhC,QAA2C,oBAA3C;AAEA,SAASC,IAAT,EAAeC,cAAf,EAA+BC,yBAA/B,QAAgE,+BAAhE;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SAASC,mBAAT,EAA8BC,mBAA9B,EAAmDC,kBAAnD,EAAuEC,kBAAvE,QAAiG,gBAAjG;AAGA,OAAO,UAAUC,gBAAV,GAA6B;AAChC,MAAI;AAAA,iBACiB,MAAMR,IAAI,CAACS,eAAL,CAAqBR,cAArB,CADvB;AAAA,UACQS,IADR,QACQA,IADR;;AAEA,UAAMC,OAAO,GAAG,MAAMb,IAAI,CAACI,yBAAD,EAA4BQ,IAA5B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMd,GAAG,CAACK,mBAAmB;AAAGU,MAAAA,EAAE,EAAEF,YAAY,CAACE;AAApB,OAA2BF,YAAY,CAACG,IAAb,EAA3B,EAApB,CAAT;AACH,GALD,CAKE,OAAOC,KAAP,EAAc;AACZ,UAAMjB,GAAG,CAACM,mBAAmB,CAACW,KAAD,CAApB,CAAT;AACH;AACJ;AAAA;AAED,OAAO,UAAUC,eAAV,CAA0BC,KAA1B,EAAiC;AACpC,QAAMC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAN;AACH;AAED,OAAO,UAAUG,mBAAV,GAAgC;AACnC,QAAMxB,UAAU,CAACM,eAAe,CAACmB,oBAAjB,EAAuCd,gBAAvC,CAAhB;AACH;AAED,OAAO,UAAUe,kBAAV,GAA+B;AAClC,QAAM1B,UAAU,CAACM,eAAe,CAACqB,mBAAjB,EAAsCP,eAAtC,CAAhB;AACH;AAGD,OAAO,UAAUQ,SAAV,GAAsB;AACzB,QAAM7B,GAAG,CAAC,CAACE,IAAI,CAACuB,mBAAD,CAAL,EAA4BvB,IAAI,CAACyB,kBAAD,CAAhC,CAAD,CAAT;AACH","sourcesContent":["import { all, takeLatest, call, put } from 'redux-saga/effects'\n\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\n\nimport UserActionTypes from './user.types';\n\nimport { googleSignInSuccess, googleSignInFailure, emailSignInSuccess, emailSignInFailure } from './user.actions';\n\n\nexport function* signInWithGoogle() {\n    try {\n        const { user } = yield auth.signInWithPopup(googleProvider);\n        const userRef = yield call(createUserProfileDocument, user);\n        const userSnapshot = yield userRef.get();\n        yield put(googleSignInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }))\n    } catch (error) {\n        yield put(googleSignInFailure(error))\n    }\n};\n\nexport function* signInWithEmail(props) {\n    yield console.log(props)\n}\n\nexport function* onGoogleSigninStart() {\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\n}\n\nexport function* onEmailSignInStart() {\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail)\n}\n\n\nexport function* userSagas() {\n    yield all([call(onGoogleSigninStart), call(onEmailSignInStart)])\n}"]},"metadata":{},"sourceType":"module"}