{"ast":null,"code":"var _jsxFileName = \"/Users/ginnnnnn/Documents/react-online-ecommerse/online-clothing-shop redux-saga applied/client/src/components/cart-dropdown/cart-dropdown.component.jsx\";\nimport React from 'react';\nimport { CartDropdownContainer, CartItemsContainer, EmptyMessageContainer, CheckoutButton } from './cart-dropdown.styles';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { toggleCartHidden } from '../../redux/cart/cart.actions';\nimport { createStructuredSelector } from 'reselect';\nimport { selectCartItems } from '../../redux/cart/cart.selectors';\nimport CartItem from '../cart-item/cart-item.component';\n\nconst CartDropdown = ({\n  cartItems,\n  history,\n  dispatch\n}) => {\n  return React.createElement(CartDropdownContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(CartItemsContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, cartItems.length ? cartItems.map(cartItem => React.createElement(CartItem, {\n    key: cartItem.id,\n    item: cartItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  })) : React.createElement(EmptyMessageContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Your cart is emtpy\")), React.createElement(CheckoutButton, {\n    onClick: () => {\n      history.push('/checkout');\n      dispatch(toggleCartHidden());\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"GO TO CHECKOUT\"));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems\n});\nexport default withRouter(connect(mapStateToProps)(CartDropdown)); //if we dont pass second argument in connect mapDispatchToProps,connect will pass\n// dispatch to props ,so we can use dispatch","map":{"version":3,"sources":["/Users/ginnnnnn/Documents/react-online-ecommerse/online-clothing-shop redux-saga applied/client/src/components/cart-dropdown/cart-dropdown.component.jsx"],"names":["React","CartDropdownContainer","CartItemsContainer","EmptyMessageContainer","CheckoutButton","withRouter","connect","toggleCartHidden","createStructuredSelector","selectCartItems","CartItem","CartDropdown","cartItems","history","dispatch","length","map","cartItem","id","push","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,qBADJ,EAEIC,kBAFJ,EAGIC,qBAHJ,EAIIC,cAJJ,QAKO,wBALP;AAOA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,+BAAjC;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,eAAT,QAAgC,iCAAhC;AAEA,OAAOC,QAAP,MAAqB,kCAArB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,OAAb;AAAsBC,EAAAA;AAAtB,CAAD,KAAsC;AACvD,SACI,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,SAAS,CAACG,MAAV,GACGH,SAAS,CAACI,GAAV,CAAcC,QAAQ,IAAI,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,QAAQ,CAACC,EAAxB;AAA4B,IAAA,IAAI,EAAED,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA1B,CADH,GAEK,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHV,CADJ,EAMI,oBAAC,cAAD;AAAgB,IAAA,OAAO,EAAE,MAAM;AAC3BJ,MAAAA,OAAO,CAACM,IAAR,CAAa,WAAb;AACAL,MAAAA,QAAQ,CAACP,gBAAgB,EAAjB,CAAR;AACH,KAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBANJ,CADJ;AAaH,CAdD;;AAgBA,MAAMa,eAAe,GAAGZ,wBAAwB,CAAC;AAC7CI,EAAAA,SAAS,EAAEH;AADkC,CAAD,CAAhD;AAMA,eAAeJ,UAAU,CAACC,OAAO,CAACc,eAAD,CAAP,CAAyBT,YAAzB,CAAD,CAAzB,C,CACA;AACA","sourcesContent":["import React from 'react';\nimport {\n    CartDropdownContainer,\n    CartItemsContainer,\n    EmptyMessageContainer,\n    CheckoutButton\n} from './cart-dropdown.styles';\n\nimport { withRouter } from 'react-router-dom'\n\nimport { connect } from 'react-redux';\nimport { toggleCartHidden } from '../../redux/cart/cart.actions';\nimport { createStructuredSelector } from 'reselect';\nimport { selectCartItems } from '../../redux/cart/cart.selectors';\n\nimport CartItem from '../cart-item/cart-item.component';\n\nconst CartDropdown = ({ cartItems, history, dispatch }) => {\n    return (\n        <CartDropdownContainer>\n            <CartItemsContainer >\n                {cartItems.length ?\n                    cartItems.map(cartItem => <CartItem key={cartItem.id} item={cartItem} />)\n                    : <EmptyMessageContainer>Your cart is emtpy</EmptyMessageContainer>}\n            </CartItemsContainer>\n            <CheckoutButton onClick={() => {\n                history.push('/checkout');\n                dispatch(toggleCartHidden())\n            }}>GO TO CHECKOUT</CheckoutButton>\n        </CartDropdownContainer >\n    );\n}\n\nconst mapStateToProps = createStructuredSelector({\n    cartItems: selectCartItems\n});\n\n\n\nexport default withRouter(connect(mapStateToProps)(CartDropdown));\n//if we dont pass second argument in connect mapDispatchToProps,connect will pass\n// dispatch to props ,so we can use dispatch\n"]},"metadata":{},"sourceType":"module"}