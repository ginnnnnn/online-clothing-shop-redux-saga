{"ast":null,"code":"import _objectSpread from \"/Users/ginnnnnn/Documents/react-online-ecommerse/online-clothing-shop/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport CartActionTypes from './cart.types';\nconst INITIAL_STATE = {\n  cartDropdownHidden: true,\n  cartItems: []\n};\n\nconst CartReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CartActionTypes.TOGGLE_CART_HIDDEN:\n      return _objectSpread({}, state, {\n        cartDropdownHidden: !state.cartDropdownHidden\n      });\n\n    case CartActionTypes.ADD_ITEM:\n      let updateArray = [...state.cartItems];\n      updateArray.map(item => {\n        if (item.id === action.payload.id) {\n          item.qt++;\n        } else {\n          updateArray.push(action.payload);\n        }\n      });\n      return _objectSpread({}, state, {\n        cartItems: updateArray\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default CartReducer;","map":{"version":3,"sources":["/Users/ginnnnnn/Documents/react-online-ecommerse/online-clothing-shop/src/redux/cart/cart.reducer.js"],"names":["CartActionTypes","INITIAL_STATE","cartDropdownHidden","cartItems","CartReducer","state","action","type","TOGGLE_CART_HIDDEN","ADD_ITEM","updateArray","map","item","id","payload","qt","push"],"mappings":";AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,kBAAkB,EAAE,IADF;AAElBC,EAAAA,SAAS,EAAE;AAFO,CAAtB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGJ,aAAT,EAAwBK,MAAxB,KAAmC;AACnD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,eAAe,CAACQ,kBAArB;AACI,+BACOH,KADP;AAEIH,QAAAA,kBAAkB,EAAE,CAACG,KAAK,CAACH;AAF/B;;AAIJ,SAAKF,eAAe,CAACS,QAArB;AACI,UAAIC,WAAW,GAAG,CAAC,GAAGL,KAAK,CAACF,SAAV,CAAlB;AACAO,MAAAA,WAAW,CAACC,GAAZ,CAAgBC,IAAI,IAAI;AACpB,YAAIA,IAAI,CAACC,EAAL,KAAYP,MAAM,CAACQ,OAAP,CAAeD,EAA/B,EAAmC;AAC/BD,UAAAA,IAAI,CAACG,EAAL;AACH,SAFD,MAEO;AACHL,UAAAA,WAAW,CAACM,IAAZ,CAAiBV,MAAM,CAACQ,OAAxB;AACH;AACJ,OAND;AAOA,+BACOT,KADP;AAEIF,QAAAA,SAAS,EAAEO;AAFf;;AAIJ;AACI,aAAOL,KAAP;AApBR;AAsBH,CAvBD;;AAyBA,eAAeD,WAAf","sourcesContent":["import CartActionTypes from './cart.types';\nconst INITIAL_STATE = {\n    cartDropdownHidden: true,\n    cartItems: []\n};\n\nconst CartReducer = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case CartActionTypes.TOGGLE_CART_HIDDEN:\n            return {\n                ...state,\n                cartDropdownHidden: !state.cartDropdownHidden\n            }\n        case CartActionTypes.ADD_ITEM:\n            let updateArray = [...state.cartItems];\n            updateArray.map(item => {\n                if (item.id === action.payload.id) {\n                    item.qt++\n                } else {\n                    updateArray.push(action.payload)\n                }\n            })\n            return {\n                ...state,\n                cartItems: updateArray\n            }\n        default:\n            return state\n    }\n};\n\nexport default CartReducer;\n"]},"metadata":{},"sourceType":"module"}