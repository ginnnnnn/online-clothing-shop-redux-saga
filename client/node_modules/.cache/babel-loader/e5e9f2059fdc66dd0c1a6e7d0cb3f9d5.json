{"ast":null,"code":"var _jsxFileName = \"/Users/ginnnnnn/Documents/react-online-ecommerse/online-clothing-shop redux-saga applied/client/src/App.js\";\nimport React, { useEffect, lazy, Suspense } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom'; // import { auth, createUserProfileDocument } from './firebase/firebase.utils'\n\nimport { GlobalStyle } from './global.styles';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { checkUserSession } from './redux/user/user.actions';\nimport { selectCurrentUser } from './redux/user/user.selectors';\nimport ShopPage from './pages/shop/shop.component';\nimport Header from './components/header/header.component';\nimport SignInAndSignUpPage from './pages/sign-in-and-sign-up/sign-in-and-sign-up.component';\nimport CheckoutPage from './pages/checkout/checkout.component';\nconst HomePage = lazy(() => import('./pages/homepage/homepage.component'));\n\nfunction App({\n  checkUserSession,\n  currentUser\n}) {\n  useEffect(() => {\n    checkUserSession();\n  }, [checkUserSession]);\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(GlobalStyle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Suspense, {\n    fallback: React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"loading\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: HomePage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  })), React.createElement(Route, {\n    path: \"/shop\",\n    component: ShopPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/checkout\",\n    component: CheckoutPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/signin\",\n    render: () => currentUser ? React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }) : React.createElement(SignInAndSignUpPage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  })));\n}\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser\n});\n\nconst mapDispatchToProps = dispatch => ({\n  checkUserSession: () => dispatch(checkUserSession())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App); //without withRouter only the first route get history match location props\n//mapDispatchToProps(dispatch) return an obj as props it contains functions for set state\n//dispatch is for sending out action to reducer to update state/store,and action we set\n// is a function(user) it return {type:\"ACTION_NAME\",payload:user}\n//GlobalStyle applied by passing as an element at the top of the app ,use createGlobalStyle method\n// provided by styled-component libray","map":{"version":3,"sources":["/Users/ginnnnnn/Documents/react-online-ecommerse/online-clothing-shop redux-saga applied/client/src/App.js"],"names":["React","useEffect","lazy","Suspense","Switch","Route","Redirect","GlobalStyle","connect","createStructuredSelector","checkUserSession","selectCurrentUser","ShopPage","Header","SignInAndSignUpPage","CheckoutPage","HomePage","App","currentUser","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,IAA3B,EAAiCC,QAAjC,QAAiD,OAAjD;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,QAAxB,QAAwC,kBAAxC,C,CACA;;AAEA,SAASC,WAAT,QAA4B,iBAA5B;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,gBAAT,QAAiC,2BAAjC;AACA,SAASC,iBAAT,QAAkC,6BAAlC;AAEA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,MAAP,MAAmB,sCAAnB;AACA,OAAOC,mBAAP,MAAgC,2DAAhC;AACA,OAAOC,YAAP,MAAyB,qCAAzB;AAGA,MAAMC,QAAQ,GAAGd,IAAI,CAAC,MAAM,OAAO,qCAAP,CAAP,CAArB;;AAGA,SAASe,GAAT,CAAa;AAAEP,EAAAA,gBAAF;AAAoBQ,EAAAA;AAApB,CAAb,EAAgD;AAE9CjB,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,gBAAgB;AACjB,GAFQ,EAEN,CAACA,gBAAD,CAFM,CAAT;AAKA,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,GAAlB;AAAsB,IAAA,SAAS,EAAEM,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,SAAS,EAAEJ,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,WAAlB;AAA8B,IAAA,SAAS,EAAEG,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAME,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,SAAlB;AACE,IAAA,MAAM,EAAE,MACNG,WAAW,GACR,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADQ,GAEP,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CAHF,CADF;AAkBD;;AAGD,MAAMC,eAAe,GAAGV,wBAAwB,CAAC;AAC/CS,EAAAA,WAAW,EAAEP;AADkC,CAAD,CAAhD;;AAIA,MAAMS,kBAAkB,GAAGC,QAAQ,KAAK;AACtCX,EAAAA,gBAAgB,EAAE,MAAMW,QAAQ,CAACX,gBAAgB,EAAjB;AADM,CAAL,CAAnC;;AAIA,eAAeF,OAAO,CAACW,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CH,GAA7C,CAAf,C,CAEA;AAEA;AACA;AACA;AAEA;AACA","sourcesContent":["import React, { useEffect, lazy, Suspense } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n// import { auth, createUserProfileDocument } from './firebase/firebase.utils'\n\nimport { GlobalStyle } from './global.styles'\n\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { checkUserSession } from './redux/user/user.actions'\nimport { selectCurrentUser } from './redux/user/user.selectors';\n\nimport ShopPage from './pages/shop/shop.component';\nimport Header from './components/header/header.component';\nimport SignInAndSignUpPage from './pages/sign-in-and-sign-up/sign-in-and-sign-up.component'\nimport CheckoutPage from './pages/checkout/checkout.component';\n\n\nconst HomePage = lazy(() => import('./pages/homepage/homepage.component'))\n\n\nfunction App({ checkUserSession, currentUser }) {\n\n  useEffect(() => {\n    checkUserSession();\n  }, [checkUserSession])\n\n\n  return (\n    <div className=\"App\">\n      <GlobalStyle />\n      <Header />\n      <Switch>\n        <Suspense fallback={<div>loading</div>}>\n          <Route exact path='/' component={HomePage} />\n        </Suspense>\n        <Route path='/shop' component={ShopPage} />\n        <Route exact path='/checkout' component={CheckoutPage} />\n        <Route exact path='/signin'\n          render={() =>\n            currentUser ?\n              (<Redirect to='/' />)\n              : <SignInAndSignUpPage />} />\n      </Switch>\n    </div>\n  );\n}\n\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser\n})\n\nconst mapDispatchToProps = dispatch => ({\n  checkUserSession: () => dispatch(checkUserSession())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\n//without withRouter only the first route get history match location props\n\n//mapDispatchToProps(dispatch) return an obj as props it contains functions for set state\n//dispatch is for sending out action to reducer to update state/store,and action we set\n// is a function(user) it return {type:\"ACTION_NAME\",payload:user}\n\n//GlobalStyle applied by passing as an element at the top of the app ,use createGlobalStyle method\n// provided by styled-component libray"]},"metadata":{},"sourceType":"module"}