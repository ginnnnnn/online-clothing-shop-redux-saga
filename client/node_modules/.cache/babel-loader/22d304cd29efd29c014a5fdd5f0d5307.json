{"ast":null,"code":"var _jsxFileName = \"/Users/ginnnnnn/Documents/react-online-ecommerse/online-clothing-shop redux-saga applied/client/src/components/stripe-button/stripe-button.component.jsx\";\nimport React from 'react';\nimport StripeCheckout from 'react-stripe-checkout';\nimport axios from 'axios';\n\nconst StripeCheckoutButton = ({\n  price\n}) => {\n  const priceForStripe = price * 100; //stripe use cent ,as we use dollars so time 100\n\n  const publishableKey = \"pk_test_x7QGV6EtI6BoFeosWRzrpqFe00mspC0ynR\";\n\n  const onToken = token => {\n    // console.log(token);\n    axios({\n      url: 'payment',\n      medthod: 'post',\n      data: {\n        amount: priceForStripe,\n        token: token //data is the body in server req.body,url \n\n      }\n    }).then(res => {\n      alert('Your payment is successful');\n    }).catch(err => {\n      console.log('payment error: ' + JSON.parse(err));\n      alert('there is an issue of your payment');\n    });\n  }; //this is for catch token from stripe passing ,normally we fetch to our backend\n  //to do our chart/then comeback\n\n\n  return React.createElement(StripeCheckout, {\n    label: \"Pay Now\",\n    name: \"cool cool shop\",\n    billingAddress: true,\n    shippingAddress: true,\n    image: \"https://svgshare.com/i/CUz.svg\",\n    description: \"Your total is $\".concat(price),\n    amount: priceForStripe,\n    panelLabel: \"Pay Now\",\n    token: onToken,\n    stripeKey: publishableKey,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  });\n};\n\nexport default StripeCheckoutButton;","map":{"version":3,"sources":["/Users/ginnnnnn/Documents/react-online-ecommerse/online-clothing-shop redux-saga applied/client/src/components/stripe-button/stripe-button.component.jsx"],"names":["React","StripeCheckout","axios","StripeCheckoutButton","price","priceForStripe","publishableKey","onToken","token","url","medthod","data","amount","then","res","alert","catch","err","console","log","JSON","parse"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,oBAAoB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AACxC,QAAMC,cAAc,GAAGD,KAAK,GAAG,GAA/B,CADwC,CAExC;;AACA,QAAME,cAAc,GAAG,4CAAvB;;AAEA,QAAMC,OAAO,GAAGC,KAAK,IAAI;AACrB;AACAN,IAAAA,KAAK,CAAC;AACFO,MAAAA,GAAG,EAAE,SADH;AAEFC,MAAAA,OAAO,EAAE,MAFP;AAGFC,MAAAA,IAAI,EAAE;AACFC,QAAAA,MAAM,EAAEP,cADN;AAEFG,QAAAA,KAAK,EAAEA,KAFL,CAIN;;AAJM;AAHJ,KAAD,CAAL,CAQGK,IARH,CAQQC,GAAG,IAAI;AACXC,MAAAA,KAAK,CAAC,4BAAD,CAAL;AACH,KAVD,EAUGC,KAVH,CAUSC,GAAG,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAoBC,IAAI,CAACC,KAAL,CAAWJ,GAAX,CAAhC;AACAF,MAAAA,KAAK,CAAC,mCAAD,CAAL;AACH,KAbD;AAcH,GAhBD,CALwC,CAsBxC;AACA;;;AAEA,SACI,oBAAC,cAAD;AACI,IAAA,KAAK,EAAC,SADV;AAEI,IAAA,IAAI,EAAC,gBAFT;AAGI,IAAA,cAAc,MAHlB;AAII,IAAA,eAAe,MAJnB;AAKI,IAAA,KAAK,EAAC,gCALV;AAMI,IAAA,WAAW,2BAAoBX,KAApB,CANf;AAOI,IAAA,MAAM,EAAEC,cAPZ;AAQI,IAAA,UAAU,EAAC,SARf;AASI,IAAA,KAAK,EAAEE,OATX;AAUI,IAAA,SAAS,EAAED,cAVf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAcH,CAvCD;;AAyCA,eAAeH,oBAAf","sourcesContent":["import React from 'react';\n\nimport StripeCheckout from 'react-stripe-checkout';\nimport axios from 'axios';\n\nconst StripeCheckoutButton = ({ price }) => {\n    const priceForStripe = price * 100;\n    //stripe use cent ,as we use dollars so time 100\n    const publishableKey = \"pk_test_x7QGV6EtI6BoFeosWRzrpqFe00mspC0ynR\";\n\n    const onToken = token => {\n        // console.log(token);\n        axios({\n            url: 'payment',\n            medthod: 'post',\n            data: {\n                amount: priceForStripe,\n                token: token\n            }\n            //data is the body in server req.body,url \n        }).then(res => {\n            alert('Your payment is successful')\n        }).catch(err => {\n            console.log('payment error: ' + JSON.parse(err));\n            alert('there is an issue of your payment')\n        })\n    };\n    //this is for catch token from stripe passing ,normally we fetch to our backend\n    //to do our chart/then comeback\n\n    return (\n        <StripeCheckout\n            label='Pay Now'\n            name='cool cool shop'\n            billingAddress\n            shippingAddress\n            image='https://svgshare.com/i/CUz.svg'\n            description={`Your total is $${price}`}\n            amount={priceForStripe}\n            panelLabel='Pay Now'\n            token={onToken}\n            stripeKey={publishableKey}\n        />\n    );\n}\n\nexport default StripeCheckoutButton;"]},"metadata":{},"sourceType":"module"}