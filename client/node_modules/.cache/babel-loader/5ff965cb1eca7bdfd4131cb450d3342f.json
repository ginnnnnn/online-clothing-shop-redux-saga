{"ast":null,"code":"import _objectSpread from \"/Users/ginnnnnn/Documents/react-online-ecommerse/online-clothing-shop redux-saga applied/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/ginnnnnn/Documents/react-online-ecommerse/online-clothing-shop redux-saga applied/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ginnnnnn/Documents/react-online-ecommerse/online-clothing-shop redux-saga applied/src/components/sign-in/sign-in.component.jsx\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { SignInContainer, TitleContainer, FormSubmitButtonContainer } from './sign-in.styles';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\n\nconst SignIn = props => {\n  const _useState = useState({\n    email: \"\",\n    password: \"\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        EmailandPassword = _useState2[0],\n        setEmailandPassword = _useState2[1];\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const emailSignInStart = props.emailSignInStart;\n    const email = EmailandPassword.email,\n          password = EmailandPassword.password;\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = e => {\n    const _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n    setEmailandPassword(_objectSpread({}, EmailandPassword, {\n      [name]: value\n    }));\n  };\n\n  return React.createElement(SignInContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(TitleContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"I already have an account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Sign in with your email and password\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    label: \"email\",\n    handleChange: handleChange,\n    type: \"email\",\n    name: \"email\",\n    value: EmailandPassword.email,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    label: \"password\",\n    handleChange: handleChange,\n    type: \"password\",\n    name: \"password\",\n    value: EmailandPassword.password,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(FormSubmitButtonContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Sign In\"), React.createElement(CustomButton, {\n    type: \"button\",\n    onClick: props.googleSignInStart,\n    isGoogleSignIn: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Sign In with Google\"))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/Users/ginnnnnn/Documents/react-online-ecommerse/online-clothing-shop redux-saga applied/src/components/sign-in/sign-in.component.jsx"],"names":["React","useState","connect","SignInContainer","TitleContainer","FormSubmitButtonContainer","googleSignInStart","emailSignInStart","FormInput","CustomButton","SignIn","props","email","password","EmailandPassword","setEmailandPassword","handleSubmit","e","preventDefault","handleChange","target","name","value","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport {\n    SignInContainer,\n    TitleContainer,\n    FormSubmitButtonContainer\n} from './sign-in.styles';\n\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\n\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\n\n\n\nconst SignIn = (props) => {\n    const [EmailandPassword, setEmailandPassword] = useState({\n        email: \"\",\n        password: \"\"\n    });\n\n\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        const { emailSignInStart } = props\n        const { email, password } = EmailandPassword\n        emailSignInStart(email, password);\n    }\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setEmailandPassword({ ...EmailandPassword, [name]: value })\n    }\n\n    return (\n        <SignInContainer>\n            <TitleContainer>I already have an account</TitleContainer>\n            <span >Sign in with your email and password</span>\n\n            <form onSubmit={handleSubmit}>\n                <FormInput\n                    label='email'\n                    handleChange={handleChange}\n                    type=\"email\"\n                    name='email'\n                    value={EmailandPassword.email}\n                    required />\n\n                <FormInput\n                    label='password'\n                    handleChange={handleChange}\n                    type=\"password\"\n                    name='password'\n                    value={EmailandPassword.password}\n                    required />\n                <FormSubmitButtonContainer>\n                    <CustomButton type=\"submit\">Sign In</CustomButton>\n                    <CustomButton type=\"button\" onClick={props.googleSignInStart} isGoogleSignIn >\n                        Sign In with Google\n                        </CustomButton>\n                </FormSubmitButtonContainer>\n            </form>\n        </SignInContainer >\n    );\n\n}\n\n\nconst mapDispatchToProps = dispatch => ({\n    googleSignInStart: () => dispatch(googleSignInStart()),\n    emailSignInStart: (email, password) => dispatch(emailSignInStart({ email, password }))\n})\n\nexport default connect(null, mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}